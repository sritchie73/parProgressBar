% Generated by roxygen2 (4.0.2): do not edit by hand
\name{parProgress}
\alias{monitorProgress}
\alias{parProgress}
\alias{reportProgress}
\alias{setupParProgressLogs}
\alias{updateParProgress}
\title{Monitor Parallel Process Progress}
\usage{
setupParProgressLogs(chunk, nChunks, ind)

updateParProgress(pb, i)

monitorProgress(nChunks, ind)

reportProgress(ind)
}
\arguments{
\item{chunk}{The chunk of indices for the current parallel instance of the
\code{foreach} loop.}

\item{nChunks}{The total number of chunks.}

\item{ind}{an integer corresponding to the level of indentation. Each
indentation level corresponds to two spaces.}

\item{pb}{an object of class "\code{txtProgressBar}"}

\item{i}{new value for the progress bar.}
}
\value{
\code{setupParProgressLogs}: a list with an object of class
  "\code{txtProgressBar}", along with the connection to the logfile (this is
  returned so it can be closed properly later.)
}
\description{
Update progress of a parallel \code{\link[foreach]{foreach}} process to
files.

\code{monitorProgress}: Monitor the progress of parallel workers.

\code{reportProgress}: Report the progress of a sequential loop.
}
\details{
When running code in parallel using \code{foreach}, new R
  instances will be spawned, one for each core as setup by the parallel
  backend. As a result no output will be sent back to the main R process
  until the \code{foreach} loop has finished running.
}
\seealso{
\code{\link[utils]{txtProgressBar}}
}

